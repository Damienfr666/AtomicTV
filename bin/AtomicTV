#!/usr/bin/env ruby -rubygems

require File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib', 'AtomicTV'))
require 'trollop'

include AtomicTV

def display_error(error)
  $stderr.puts "! ERROR: #{error.human_message}"
end

opts = Trollop.options do
  banner("Usage: AtomicTV [options]")
  opt :dry_run,    "Only output basic episode information for debug", type: :flag
  opt :use_itunes, "Use the itunes store api instead of tvdb",        type: :flag
end

ARGV.each do |path|
  begin
    file_path = Pathname.new(path)
    metadata = if opts[:use_itunes]
                 ItunesEpisode.metadata_for_filename(file_path.basename)
               else
                 TVDBEpisode.metadata_for_filename(file_path.basename)
               end
    if opts[:dry_run]
      require 'pp'
      pp metadata
    else
      tagger = AtomicParsleyTagger.new(file_path, metadata)
      tagger.run
    end
    puts "* Tagged: #{file_path.basename}"
  rescue AtomicParsleyTagger::AtomicParsleyUnavailable => error
    display_error(error)
    exit 1
  rescue AtomicTVError => error
    display_error(error)
  end
end
